name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm ci || npm install
      - name: Build
        run: |
          mkdir -p dist
          cp -r src dist/
          cp index.html dist/
          npx tailwindcss -i ./src/styles/main.css -o ./dist/output.css --minify || echo "Tailwind build failed"
          
          # Modify index.html to use the correct paths
          sed -i 's|<link href="./src/styles/main.css" rel="stylesheet">|<link href="./output.css" rel="stylesheet"><link href="https://cdn.jsdelivr.net/npm/tailwindcss@3.4.0/dist/tailwind.min.css" rel="stylesheet">|g' dist/index.html
          sed -i 's|<script type="module" src="/src/scripts/main.js"></script>|<script src="./src/scripts/main.js"></script>|g' dist/index.html
          
          # Add CDN imports
          sed -i 's|</head>|<script src="https://cdn.jsdelivr.net/npm/chart.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script></head>|g' dist/index.html
          
          # Create a simple script to initialize the app
          cat > dist/init.js << 'EOL'
          document.addEventListener('DOMContentLoaded', () => {
            console.log('Initializing app...');
            
            // Set default values
            const defaults = {
              meanX: 0.08,
              stdX: 0.20,
              meanY: 0.12,
              stdY: 0.30,
              weightA: 0.6,
              weightB: 0.4,
              numSims: 10000
            };
            
            // Set default values for inputs
            Object.keys(defaults).forEach(id => {
              const element = document.getElementById(id);
              if (element && (!element.value || element.value === '0')) {
                element.value = defaults[id];
              }
            });
            
            // Initialize sliders
            const weightA = document.getElementById('weightA');
            const weightB = document.getElementById('weightB');
            const weightAValue = document.getElementById('weightAValue');
            const weightBValue = document.getElementById('weightBValue');
            
            if (weightA && weightAValue) {
              weightAValue.textContent = `${parseInt(weightA.value * 100)}%`;
              weightA.addEventListener('input', () => {
                weightAValue.textContent = `${parseInt(weightA.value * 100)}%`;
                if (weightB) {
                  weightB.value = (1 - parseFloat(weightA.value)).toFixed(2);
                  if (weightBValue) {
                    weightBValue.textContent = `${parseInt(weightB.value * 100)}%`;
                  }
                }
              });
            }
            
            if (weightB && weightBValue) {
              weightBValue.textContent = `${parseInt(weightB.value * 100)}%`;
              weightB.addEventListener('input', () => {
                weightBValue.textContent = `${parseInt(weightB.value * 100)}%`;
                if (weightA) {
                  weightA.value = (1 - parseFloat(weightB.value)).toFixed(2);
                  if (weightAValue) {
                    weightAValue.textContent = `${parseInt(weightA.value * 100)}%`;
                  }
                }
              });
            }
            
            // Initialize run button
            const runButton = document.getElementById('runSimulation');
            if (runButton) {
              runButton.addEventListener('click', () => {
                console.log('Run button clicked');
                alert('Simulación iniciada. Esta es una versión simplificada para GitHub Pages.');
              });
            }
          });
          EOL
          
          # Add the init script to index.html
          sed -i 's|</body>|<script src="./init.js"></script></body>|g' dist/index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3